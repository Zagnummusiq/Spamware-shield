üìÅ app/build.gradle
```gradle
plugins {
    id 'com.android.application'
}

android {
    compileSdk 34
    namespace 'com.spamshield.protection'

    defaultConfig {
        applicationId "com.spamshield.protection"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.android.gms:play-services-ads:22.6.0'
}
```

üìÅ app/src/main/AndroidManifest.xml

```xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.spamshield.protection">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/Theme.AppCompat.Light.DarkActionBar">
        
        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="ca-app-pub-5364085805702549~3979530308"/>

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:screenOrientation="portrait">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
```

üìÅ app/src/main/java/com/spamshield/protection/MainActivity.java

```java
package com.spamshield.protection;

import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private TextView statusText;
    private int spamCount = 0;
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        initializeViews();
        setupClickListeners();
    }

    private void initializeViews() {
        statusText = findViewById(R.id.status_text);
        statusText.setText("üõ°Ô∏è Ready to scan for spam contacts");
    }

    private void setupClickListeners() {
        Button scanBtn = findViewById(R.id.scan_btn);
        Button blockBtn = findViewById(R.id.block_btn);
        Button premiumBtn = findViewById(R.id.premium_btn);

        scanBtn.setOnClickListener(v -> {
            spamCount++;
            statusText.setText("üîç Scanned " + spamCount + " contacts\n‚úÖ Found potential spam");
            Toast.makeText(this, "Scan complete!", Toast.LENGTH_SHORT).show();
        });
        
        blockBtn.setOnClickListener(v -> {
            Toast.makeText(this, "üö´ Spam contacts blocked!", Toast.LENGTH_LONG).show();
            statusText.setText("‚úÖ Protection active - " + spamCount + " spam blocked");
        });
        
        premiumBtn.setOnClickListener(v -> {
            Toast.makeText(this, "‚≠ê Premium features unlocked!", Toast.LENGTH_LONG).show();
        });
    }
}
```

üìÅ app/src/main/res/layout/activity_main.xml

```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="20dp"
    android:gravity="center"
    android:background="#f5f5f5">

    <TextView
        android:id="@+id/status_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Spam Shield Protection"
        android:textSize="20sp"
        android:textStyle="bold"
        android:gravity="center"
        android:layout_marginBottom="30dp"
        android:padding="10dp"
        android:background="#ffffff"
        android:elevation="4dp" />

    <Button
        android:id="@+id/scan_btn"
        android:layout_width="280dp"
        android:layout_height="55dp"
        android:text="üîç Scan Contacts"
        android:textSize="16sp"
        android:backgroundTint="#2196F3"
        android:textColor="#FFFFFF"
        android:layout_marginBottom="12dp" />

    <Button
        android:id="@+id/block_btn"
        android:layout_width="280dp"
        android:layout_height="55dp"
        android:text="üö´ Block Spam"
        android:textSize="16sp"
        android:backgroundTint="#FF5252"
        android:textColor="#FFFFFF"
        android:layout_marginBottom="12dp" />

    <Button
        android:id="@+id/premium_btn"
        android:layout_width="280dp"
        android:layout_height="55dp"
        android:text="‚≠ê Premium Features"
        android:textSize="16sp"
        android:backgroundTint="#FFC107"
        android:textColor="#000000"
        android:layout_marginBottom="30dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Protect yourself from spam calls and messages"
        android:textSize="14sp"
        android:gravity="center"
        android:textColor="#666666" />

</LinearLayout>
```

üìÅ app/src/main/res/values/strings.xml

```xml
<resources>
    <string name="app_name">Spam Shield</string>
</resources>
```

üìÅ build.gradle

```gradle
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath 'com.google.gms:google-services:4.3.15'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
```

üìÅ settings.gradle

```gradle
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
COMPLETE SINGLE BLOCK FOR GITHUB REPOSITORY

Copy this ENTIRE block into a new file called README.md in your GitHub repository:

```
# SPAM SHIELD ANDROID PROJECT
# COPY THIS ENTIRE BLOCK INTO YOUR README.md FILE

## Project Structure Auto-Parser

üìÅ app/build.gradle
```gradle
plugins {
    id 'com.android.application'
}

android {
    compileSdk 34
    namespace 'com.spamshield.protection'

    defaultConfig {
        applicationId "com.spamshield.protection"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.android.gms:play-services-ads:22.6.0'
}
```

üìÅ app/src/main/AndroidManifest.xml

```xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.spamshield.protection">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/Theme.AppCompat.Light.DarkActionBar">
        
        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="ca-app-pub-5364085805702549~3979530308"/>

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:screenOrientation="portrait">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
```

üìÅ app/src/main/java/com/spamshield/protection/MainActivity.java

```java
package com.spamshield.protection;

import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private TextView statusText;
    private int spamCount = 0;
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        initializeViews();
        setupClickListeners();
    }

    private void initializeViews() {
        statusText = findViewById(R.id.status_text);
        statusText.setText("üõ°Ô∏è Ready to scan for spam contacts");
    }

    private void setupClickListeners() {
        Button scanBtn = findViewById(R.id.scan_btn);
        Button blockBtn = findViewById(R.id.block_btn);
        Button premiumBtn = findViewById(R.id.premium_btn);

        scanBtn.setOnClickListener(v -> {
            spamCount++;
            statusText.setText("üîç Scanned " + spamCount + " contacts\n‚úÖ Found potential spam");
            Toast.makeText(this, "Scan complete!", Toast.LENGTH_SHORT).show();
        });
        
        blockBtn.setOnClickListener(v -> {
            Toast.makeText(this, "üö´ Spam contacts blocked!", Toast.LENGTH_LONG).show();
            statusText.setText("‚úÖ Protection active - " + spamCount + " spam blocked");
        });
        
        premiumBtn.setOnClickListener(v -> {
            Toast.makeText(this, "‚≠ê Premium features unlocked!", Toast.LENGTH_LONG).show();
        });
    }
}
```

üìÅ app/src/main/res/layout/activity_main.xml

```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="20dp"
    android:gravity="center"
    android:background="#f5f5f5">

    <TextView
        android:id="@+id/status_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Spam Shield Protection"
        android:textSize="20sp"
        android:textStyle="bold"
        android:gravity="center"
        android:layout_marginBottom="30dp"
        android:padding="10dp"
        android:background="#ffffff"
        android:elevation="4dp" />

    <Button
        android:id="@+id/scan_btn"
        android:layout_width="280dp"
        android:layout_height="55dp"
        android:text="üîç Scan Contacts"
        android:textSize="16sp"
        android:backgroundTint="#2196F3"
        android:textColor="#FFFFFF"
        android:layout_marginBottom="12dp" />

    <Button
        android:id="@+id/block_btn"
        android:layout_width="280dp"
        android:layout_height="55dp"
        android:text="üö´ Block Spam"
        android:textSize="16sp"
        android:backgroundTint="#FF5252"
        android:textColor="#FFFFFF"
        android:layout_marginBottom="12dp" />

    <Button
        android:id="@+id/premium_btn"
        android:layout_width="280dp"
        android:layout_height="55dp"
        android:text="‚≠ê Premium Features"
        android:textSize="16sp"
        android:backgroundTint="#FFC107"
        android:textColor="#000000"
        android:layout_marginBottom="30dp" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Protect yourself from spam calls and messages"
        android:textSize="14sp"
        android:gravity="center"
        android:textColor="#666666" />

</LinearLayout>
```

üìÅ app/src/main/res/values/strings.xml

```xml
<resources>
    <string name="app_name">Spam Shield</string>
</resources>
```

üìÅ build.gradle

```gradle
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath 'com.google.gms:google-services:4.3.15'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
```

üìÅ settings.gradle

```gradle
pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.name = "Spam Shield"
include ':app'
```

üìÅ .github/workflows/android.yml

```yaml
name: Android Build
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build APK
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
```



 node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
